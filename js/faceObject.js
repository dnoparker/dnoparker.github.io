import*as THREE from"three";export class FaceObject{constructor(scene,camera,renderer){this.scene=scene,this.camera=camera,this.renderer=renderer,this.group=new THREE.Group,this.scene.add(this.group),this.currentTween=null,this.raycaster=new THREE.Raycaster,this.mouse=new THREE.Vector2,this.update=this.update.bind(this),this.render=this.render.bind(this),this.swipeLeft=this.swipeLeft.bind(this),this.swipeRight=this.swipeRight.bind(this),this.onClick=this.onClick.bind(this)}initialize(){throw new Error("initialize() must be implemented by subclass")}update(){}render(){this.renderer.render(this.scene,this.camera)}setupEventListeners(){}swipeLeft(){console.log("Swipe left on generic FaceObject")}swipeRight(){console.log("Swipe right on generic FaceObject")}onClick(event){const rect=this.renderer.domElement.getBoundingClientRect(),x=(event.clientX-rect.left)/rect.width*2-1,y=-(event.clientY-rect.top)/rect.height*2+1;this.mouse.set(x,y),this.raycaster.setFromCamera(this.mouse,this.camera);const intersects=this.raycaster.intersectObjects(this.group.children,!0);intersects.length>0&&console.log("Generic click on FaceObject:",intersects[0].object)}dispose(){this.scene.remove(this.group)}}